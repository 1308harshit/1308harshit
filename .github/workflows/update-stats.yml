name: Update GitHub Stats

on:
  schedule:
    - cron: '0 */6 * * *'  # Every 6 hours
  push:
    branches:
      - main  # Trigger on push to main branch
  workflow_dispatch: # Manual trigger

permissions:
  contents: write

jobs:
  update-stats:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GH_PAT }}

      - name: Get Private GitHub Stats
        id: get-stats
        run: |
          # Get total PR count (including private repos)
          PR_COUNT=$(curl -s -H "Authorization: Bearer ${{ secrets.GH_PAT }}" \
               -H "Accept: application/vnd.github+json" \
               "https://api.github.com/search/issues?q=type:pr+author:1308harshit" \
               | jq -r '.total_count')

          # Get user info including private repos
          USER_INFO=$(curl -s -H "Authorization: Bearer ${{ secrets.GH_PAT }}" \
               -H "Accept: application/vnd.github+json" \
               "https://api.github.com/users/1308harshit")

          PUBLIC_REPOS=$(echo $USER_INFO | jq -r '.public_repos')
          PRIVATE_REPOS=$(echo $USER_INFO | jq -r '.total_private_repos')

          # Get total commits (estimate based on public + private)
          TOTAL_COMMITS=$(curl -s -H "Authorization: Bearer ${{ secrets.GH_PAT }}" \
               -H "Accept: application/vnd.github+json" \
               "https://api.github.com/search/commits?q=author:1308harshit" \
               | jq -r '.total_count')

          echo "PR_COUNT=$PR_COUNT" >> $GITHUB_OUTPUT
          echo "PUBLIC_REPOS=$PUBLIC_REPOS" >> $GITHUB_OUTPUT
          echo "PRIVATE_REPOS=$PRIVATE_REPOS" >> $GITHUB_OUTPUT
          echo "TOTAL_COMMITS=$TOTAL_COMMITS" >> $GITHUB_OUTPUT

          echo "Real Stats:"
          echo "Total PRs: $PR_COUNT"
          echo "Public Repos: $PUBLIC_REPOS"
          echo "Private Repos: $PRIVATE_REPOS"
          echo "Total Commits: $TOTAL_COMMITS"

      - name: Update README with Real Stats
        run: |
          PR_COUNT="${{ steps.get-stats.outputs.PR_COUNT }}"
          PUBLIC_REPOS="${{ steps.get-stats.outputs.PUBLIC_REPOS }}"
          PRIVATE_REPOS="${{ steps.get-stats.outputs.PRIVATE_REPOS }}"
          TOTAL_COMMITS="${{ steps.get-stats.outputs.TOTAL_COMMITS }}"
          
          # Get current UTC time and convert to IST (UTC+5:30)
          UTC_TIME=$(date -u +"%Y-%m-%d %H:%M")
          
          # Convert to IST by adding 5 hours and 30 minutes
          # Extract date and time components
          DATE_PART=$(echo $UTC_TIME | cut -d' ' -f1)
          TIME_PART=$(echo $UTC_TIME | cut -d' ' -f2)
          
          # Extract hour and minute
          HOUR=$(echo $TIME_PART | cut -d':' -f1)
          MINUTE=$(echo $TIME_PART | cut -d':' -f2)
          
          # Add 5 hours and 30 minutes
          NEW_HOUR=$((HOUR + 5))
          NEW_MINUTE=$((MINUTE + 30))
          
          # Handle minute overflow (if > 59)
          if [ $NEW_MINUTE -ge 60 ]; then
            NEW_HOUR=$((NEW_HOUR + 1))
            NEW_MINUTE=$((NEW_MINUTE - 60))
          fi
          
          # Handle hour overflow (if > 23)
          if [ $NEW_HOUR -ge 24 ]; then
            NEW_HOUR=$((NEW_HOUR - 24))
            # Add one day to date (simplified - assumes same month)
            DATE_PART=$(date -d "$DATE_PART +1 day" +"%Y-%m-%d" 2>/dev/null || echo $DATE_PART)
          fi
          
          # Format the IST time
          CURRENT_TIME_IST="${DATE_PART} $(printf "%02d:%02d" $NEW_HOUR $NEW_MINUTE) IST"
          
          # Fallback: Try using TZ environment variable
          if [ -z "$CURRENT_TIME_IST" ] || [ "$CURRENT_TIME_IST" = " IST" ]; then
            export TZ="Asia/Kolkata"
            CURRENT_TIME_IST=$(date +"%Y-%m-%d %H:%M IST")
            if [ -z "$CURRENT_TIME_IST" ]; then
              CURRENT_TIME_IST="${UTC_TIME} IST"
            fi
          fi

          # Update README.md with real stats (handles both placeholders and existing values)
          echo "Attempting to update stats in README.md..."
          
          # Backup original README for debugging
          cp README.md README.md.backup
          
          # Try to replace placeholders first, then existing values
          # Total Pull Requests
          if grep -q "- \*\*Total Pull Requests\*\*: \[Auto-updated via GitHub Actions\]" README.md; then
            sed -i "s/- \*\*Total Pull Requests\*\*: \[Auto-updated via GitHub Actions\]/- \*\*Total Pull Requests\*\*: **$PR_COUNT**/" README.md
            echo "Replaced Total Pull Requests placeholder with: $PR_COUNT"
          else
            sed -i "s/- \*\*Total Pull Requests\*\*: \*\*[0-9]*\*\*/- \*\*Total Pull Requests\*\*: **$PR_COUNT**/" README.md
            echo "Updated existing Total Pull Requests to: $PR_COUNT"
          fi
          
          # Public Repositories
          if grep -q "- \*\*Public Repositories\*\*: \[Auto-updated via GitHub Actions\]" README.md; then
            sed -i "s/- \*\*Public Repositories\*\*: \[Auto-updated via GitHub Actions\]/- \*\*Public Repositories\*\*: **$PUBLIC_REPOS**/" README.md
            echo "Replaced Public Repositories placeholder with: $PUBLIC_REPOS"
          else
            sed -i "s/- \*\*Public Repositories\*\*: \*\*[0-9]*\*\*/- \*\*Public Repositories\*\*: **$PUBLIC_REPOS**/" README.md
            echo "Updated existing Public Repositories to: $PUBLIC_REPOS"
          fi
          
          # Private Repositories
          if grep -q "- \*\*Private Repositories\*\*: \[Auto-updated via GitHub Actions\]" README.md; then
            sed -i "s/- \*\*Private Repositories\*\*: \[Auto-updated via GitHub Actions\]/- \*\*Private Repositories\*\*: **$PRIVATE_REPOS**/" README.md
            echo "Replaced Private Repositories placeholder with: $PRIVATE_REPOS"
          else
            sed -i "s/- \*\*Private Repositories\*\*: \*\*[0-9]*\*\*/- \*\*Private Repositories\*\*: **$PRIVATE_REPOS**/" README.md
            echo "Updated existing Private Repositories to: $PRIVATE_REPOS"
          fi
          
          # Total Commits
          if grep -q "- \*\*Total Commits\*\*: \[Auto-updated via GitHub Actions\]" README.md; then
            sed -i "s/- \*\*Total Commits\*\*: \[Auto-updated via GitHub Actions\]/- \*\*Total Commits\*\*: **$TOTAL_COMMITS**/" README.md
            echo "Replaced Total Commits placeholder with: $TOTAL_COMMITS"
          else
            sed -i "s/- \*\*Total Commits\*\*: \*\*[0-9]*\*\*/- \*\*Total Commits\*\*: **$TOTAL_COMMITS**/" README.md
            echo "Updated existing Total Commits to: $TOTAL_COMMITS"
          fi
          
          # Last Updated
          if grep -q "- \*\*Last Updated\*\*: \[Auto-updated via GitHub Actions\]" README.md; then
            sed -i "s/- \*\*Last Updated\*\*: \[Auto-updated via GitHub Actions\]/- \*\*Last Updated\*\*: **$CURRENT_TIME_IST**/" README.md
            echo "Replaced Last Updated placeholder with: $CURRENT_TIME_IST"
          else
            sed -i "s/- \*\*Last Updated\*\*: \*\*[0-9-]* [0-9:]* [A-Z]*\*\*/- \*\*Last Updated\*\*: **$CURRENT_TIME_IST**/" README.md
            echo "Updated existing Last Updated to: $CURRENT_TIME_IST"
          fi
          
          # Show the changes made
          echo "=== Changes made to README.md ==="
          diff README.md.backup README.md || echo "No changes detected or diff failed"
          echo "=== End of changes ==="

          echo "Updated README with real stats:"
          echo "Total PRs: $PR_COUNT"
          echo "Public Repos: $PUBLIC_REPOS"
          echo "Private Repos: $PRIVATE_REPOS"
          echo "Total Commits: $TOTAL_COMMITS"
          echo "Last Updated: $CURRENT_TIME_IST"
          echo "Original UTC: $UTC_TIME"
          echo "Timezone conversion: UTC+5:30 (IST)"

          # Note: Stats are now visible in README until next workflow run
          echo "Stats updated successfully and are now visible in README"
          echo "Next workflow run will update these values again"

      - name: Commit and Push Changes
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          
          # Check if README was actually modified
          if git diff --quiet README.md; then
            echo "No changes detected in README.md - skipping commit"
            exit 0
          else
            echo "Changes detected in README.md - proceeding with commit"
            git diff README.md
          fi
          
          git add README.md
          git commit -m "Update README with real GitHub statistics: ${{ steps.get-stats.outputs.PR_COUNT }} PRs, ${{ steps.get-stats.outputs.PRIVATE_REPOS }} private repos" || exit 0
          git push origin main
